/****************************
 ****      Vars
****************************/
$input-border-width: 1px;
$border-radius: 4px;
$input-border-radius: 4px;
$button-border-radius: 4px;
$enable-rounded: true;
$danger: #D87A7F;
$success-50: rgba(10, 187, 135, .1);
$success: #0abb87;
$secondary: #dbe7f3;
$secondary-hover: #bfd4ea;
$secondary-text: #3a3e63;
$primary-50: rgba(93, 120, 255, .1);
$primary: #5d78ff;
$dark-50: rgba(0, 0, 0, 0.04);

/****************************
 ****      Mixins & Functions
****************************/
$grid-breakpoints: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$grid-breakpoints: map-merge(
                (
                        xs: 0,
                        sm: 576px,
                        md: 768px,
                        lg: 992px,
                        xl: 1200px
                ),
                $grid-breakpoints
);
$spacer: 5px;
$spacers: ();
$spacers: map-merge(
                (
                        0: 0,
                        1: $spacer,
                        2: ($spacer * 2),
                        3: ($spacer * 3),
                        4: ($spacer * 4),
                        5: ($spacer * 5),
                        6: ($spacer * 6),
                        7: ($spacer * 7),
                        8: ($spacer * 8),
                        9: ($spacer * 9),
                        10: ($spacer * 10),
                        11: ($spacer * 11),
                        12: ($spacer * 12),
                        13: ($spacer * 13),
                        14: ($spacer * 14),
                        15: ($spacer * 15),
                        16: ($spacer * 16),
                        17: ($spacer * 17),
                        18: ($spacer * 18),
                        19: ($spacer * 19),
                        20: ($spacer * 20),
                        21: ($spacer * 21),
                        22: ($spacer * 22),
                        23: ($spacer * 23),
                        24: ($spacer * 24),
                        25: ($spacer * 25),
                        26: ($spacer * 26),
                        27: ($spacer * 27),
                        28: ($spacer * 28),
                        29: ($spacer * 29),
                        30: ($spacer * 30),
                ),
                $spacers
);

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}


@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
  @if $enable-rounded {
    border-radius: $radius;
  } @else if $fallback-border-radius != false {
    border-radius: $fallback-border-radius;
  }
}

@mixin border-top-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
  }
}

@mixin border-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
}

@mixin border-bottom-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

@mixin border-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

@mixin border-top-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
  }
}

@mixin border-top-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: $radius;
  }
}

@mixin border-bottom-right-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: $radius;
  }
}

@mixin border-bottom-left-radius($radius) {
  @if $enable-rounded {
    border-bottom-left-radius: $radius;
  }
}

